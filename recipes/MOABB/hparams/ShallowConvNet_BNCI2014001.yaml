###################################################
# Classification of imagined movements (right hand, left hand, feet, tongue) of BNCI2014001 MOABB dataset using ShallowConvNet.
# ShallowConvNet from https://doi.org/10.1002/hbm.23730.
# BNCI2014001 from https://doi.org/10.3389/fnins.2012.00055.
#
# Author
# ------
# Davide Borra, 2021
###################################################
seed: 1234
__set_torchseed: !apply:torch.manual_seed [!ref <seed>]

# DIRECTORIES
data_folder: !PLACEHOLDER  #'/path/to/BNCI2014001' The dataset will be automatically downloaded in this folder
output_folder: !ref results/ShallowConvNet_BNCI2014001/<seed>

# DATASET HPARS
# Defining the MOABB dataset.
dataset: !new:moabb.datasets.BNCI2014001
subject_list: [1, 2, 3, 4, 5, 6, 7, 8, 9]  # subject list
events: ['left_hand', 'right_hand', 'feet', 'tongue']
n_classes: 4
sf: 128  # Target sampling rate (Hz)
# tmin, tmax respect to stimulus onset that define the interval attribute of the dataset class
# trial begins (0 s), cue (2 s, 1.25 s long); each trial is 6 s long
# dataset interval starts from 2
# -->tmin tmax are referred to this start value (e.g., tmin=0.5 corresponds to 2.5 s)
tmin: 0.5
tmax: 2.5
T: !ref <sf> * (<tmax> - <tmin>)
# fmin, fmax band-pass filtering
fmin: 4
fmax: 40
channels: ['Fz', 'FC3', 'FC1', 'FCz', 'FC2', 'FC4',
           'C5', 'C3', 'C1', 'Cz', 'C2', 'C4',
           'C6', 'CP3', 'CP1', 'CPz', 'CP2', 'CP4',
           'P1', 'Pz', 'P2', 'POz']
C: 22
# Defining the MOABB paradigm and setting the pre-processing hyper-parameters for the specific dataset.
paradigm: !new:moabb.paradigms.MotorImagery
  events: !ref <events>
  n_classes: !ref <n_classes>
  fmin: !ref <fmin>
  fmax: !ref <fmax>
  tmin: !ref <tmin>
  tmax: !ref <tmax>
  channels: !ref <channels>
  resample: !ref <sf>

# TRAINING HPARS
num_parallel_processes: 6  # number of parallel processes to run
nfolds: 4 # number of cross-validation folds (only for within_session_it, cross_session_it)
number_of_epochs: 500 # number of training epochs
lr: 0.001 # learning rate

# Learning rate scheduling (cyclic learning rate is used here)
max_lr: !ref <lr> # Upper bound of the cycle (max value of the lr)
base_lr: 0.00000001 # Lower bound in the cycle (min value of the lr)
step_size: 100 # number of training iterations per half cycle (lower step_size => faster cycles)

# Test is done with the best model according to the following metrics
test_keys: ["acc"] # Possible opts: "loss", "f1", "auc", "acc"
loss: !name:torch.nn.functional.nll_loss
optimizer: !name:torch.optim.Adam
  lr: !ref <lr>
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter  # epoch counter
  limit: !ref <number_of_epochs>
batch_size: 32
valid_ratio: 0.2
# data iterators
within_session_it: !new:recipes.MOABB.dataio_iterators.WithinSession
  paradigm: !ref <paradigm>
  nfolds: !ref <nfolds>
  seed: !ref <seed>
leave_one_session_out_it: !new:recipes.MOABB.dataio_iterators.LeaveOneSessionOut
  paradigm: !ref <paradigm>
  seed: !ref <seed>
cross_session_it: !new:recipes.MOABB.dataio_iterators.CrossSession
  paradigm: !ref <paradigm>
  nfolds: !ref <nfolds>
  seed: !ref <seed>
leave_one_subject_out_it: !new:recipes.MOABB.dataio_iterators.LeaveOneSubjectOut
  paradigm: !ref <paradigm>
  seed: !ref <seed>
data_iterators: [!ref <within_session_it>,
                 !ref <leave_one_session_out_it>,
                 !ref <cross_session_it>,
                 !ref <leave_one_subject_out_it>,
]

# MODEL: SHALLOWCONVNET
input_shape: [null, !ref <T>, !ref <C>, null]
cnn_temporal_kernels: 40  # number of temporal filters in the temporal conv. layer
cnn_spatial_kernels: 40  # number of spatial filters in the spatial conv. layer
dropout: 0.25  # dropout rate
model: !new:speechbrain.lobes.models.ShallowConvNet.ShallowConvNet
  input_shape: !ref <input_shape>
  sf: !ref <sf>
  cnn_temporal_kernels: !ref <cnn_temporal_kernels>
  cnn_spatial_kernels: !ref <cnn_spatial_kernels>
  dense_n_neurons: !ref <n_classes>
  dropout: !ref <dropout>

lr_annealing: !new:speechbrain.nnet.schedulers.CyclicLRScheduler
  base_lr: !ref <base_lr>
  max_lr: !ref <max_lr>
  step_size: !ref <step_size>
