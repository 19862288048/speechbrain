# ################################
# Model: LSTM (encoder) + GRU (decoder)
# Authors: Loren Lugosch & Mirco Ravanelli 2020
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data paths
hpfit: false
output_folder: !ref results/RNN/<seed>
data_folder: /localscratch/librig2p
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
use_tensorboard: True
tensorboard_logs: !ref <output_folder>/logs/
enable_interim_reports: True
ckpt_frequency: 1
ckpt_enable: true
enable_metrics: True


input_lexicon: !ref <save_folder>/lexicon.csv
oov: !ref <save_folder>/oov.csv
pretrained_path: !ref <save_folder>/pretrained


# These three files are created from lexicon.csv.
build_lexicon: False
data_load: !name:speechbrain.dataio.dataset.DynamicItemDataset.from_json
lexicon_train_data: !ref <data_folder>/lexicon_train.json
lexicon_valid_data: !ref <data_folder>/lexicon_valid.json
lexicon_test_data: !ref <data_folder>/lexicon_test.json
lexicon_sample: null
lexicon_sample_random: False
sentence_train_data: !ref <data_folder>/sentence_train.json
sentence_valid_data: !ref <data_folder>/sentence_valid.json
sentence_test_data: !ref <data_folder>/sentence_test.json
sentence_sample: null
sentence_sample_random: False
homograph_train_data: !ref <data_folder>/homograph_train.json
homograph_valid_data: !ref <data_folder>/homograph_valid.json
homograph_test_data: !ref <data_folder>/homograph_test.json
homograph_sample: null
homograph_sample_random: False
homograph_balance: True


skip_prep: False
sorting: random #ascending
origins: "*"
graphemes_count: 28
graphemes_space_separated: False
phonemes_space_separated: False
phonemes_count: 43
phonemes_enable_space: True

# Neural Parameters
lexicon_epochs: 50
lexicon_ctc_epochs: 10
sentence_epochs: 20
sentence_ctc_epochs: 10
homograph_epochs: 20
homograph_ctc_epochs: 10
lexicon_batch_size: 128
sentence_batch_size: 64
homograph_batch_size: 64
ctc_weight: 0.5
homograph_loss_weight: 2.0
lr: 0.005
lr_min: 0.00001
lr_dont_halve_until_epoch: 1
lr_patience: 1
lr_annealing_mode: epoch
adam_beta1: 0.99
adam_beta2: 0.998
save_for_pretrained: True

# Model parameters
output_neurons: !ref <phonemes_count>
embedding_dim: 768
enc_num_layers: 4
dec_num_layers: 4
transformer_d_model: 768
transformer_d_ffn: 2048
transformer_num_heads: 4
transformer_dropout: 0.1
transformer_normalize_before: True
transformer_encoder_module: conformer
transformer_kernel_size: 7
transformer_causal: True
embedding_type: regular

# Determines whether to use BOS (beginning-of-sequence) or EOS (end-of-sequence) tokens
# Available modes:
# raw: no BOS/EOS tokens are added
# bos: a beginning-of-sequence token is added
# eos: an end-of-sequence token is added
grapheme_sequence_mode: eos
phoneme_sequence_mode: bos

enc_kdim: null
enc_vdim: null
dec_kdim: null
dec_vdim: null
max_length: 2500

# Special Token information
bos_index: 1
eos_index: 2
blank_index: 3

# Language Model
lm_d_model: 128
lm_enc_num_layers: 3
lm_dec_num_layers: 3
lm_d_ffn: 2048
lm_dropout: 0.1

# Beam Searcher
use_language_model: False
beam_search_min_decode_ratio: 0
beam_search_max_decode_ratio: 1.0
beam_search_beam_size: 8
beam_search_beam_size_valid: 1
beam_search_eos_threshold: 1.5
beam_search_using_max_attn_shift: False
beam_search_max_attn_shift: 10
beam_search_coverage_penalty: 0.0
beam_search_lm_weight: 0.5
beam_search_ctc_weight_decode: 0.4
beam_search_temperature: 1.0
beam_search_temperature_lm: 1.0

# Word embeddings
use_word_emb: False
word_emb_model: bert-base-uncased
word_emb_dim: 768
word_emb_enc_dim: 256
word_emb_norm_type: batch

# Evaluation parameters
eval_dataset: train
eval_train_step: sentence
eval_batch_size: 128
eval_batch_count: 1
eval_reporting: raw
eval_prediction_sample_size: 10
eval_mode: sentence
eval_output_wer_file: False
eval_wer_file: !ref <save_folder>/wer_eval.txt


select_n_sentences: None

graphemes:
    - A
    - B
    - C
    - D
    - E
    - F
    - G
    - H
    - I
    - J
    - K
    - L
    - M
    - N
    - O
    - P
    - Q
    - R
    - S
    - T
    - U
    - V
    - W
    - X
    - Y
    - Z
    - "'"
    - " "

phonemes:
    - AA
    - AE
    - AH
    - AO
    - AW
    - AY
    - B
    - CH
    - D
    - DH
    - EH
    - ER
    - EY
    - F
    - G
    - HH
    - IH
    - IY
    - JH
    - K
    - L
    - M
    - N
    - NG
    - OW
    - OY
    - P
    - R
    - S
    - SH
    - T
    - TH
    - UH
    - UW
    - V
    - W
    - Y
    - Z
    - ZH
    - " "

enc_input_dim: !apply:speechbrain.lobes.models.g2p.model.input_dim
    use_word_emb: !ref <use_word_emb>
    word_emb_enc_dim: !ref <word_emb_enc_dim>
    embedding_dim: !ref <embedding_dim>


# Models

char_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <embedding_dim>
    n_neurons: !ref <transformer_d_model>
    bias: True

phn_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <embedding_dim>
    n_neurons: !ref <transformer_d_model>
    bias: True

lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <transformer_d_model>
    n_neurons: !ref <output_neurons>
    bias: False

ctc_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <transformer_d_model>
    n_neurons: !ref <output_neurons>

encoder_emb_norm: !new:speechbrain.lobes.models.transformer.Transformer.NormalizedEmbedding
     d_model: !ref <transformer_d_model>
     vocab: !ref <graphemes_count>

emb_norm: !new:speechbrain.lobes.models.transformer.Transformer.NormalizedEmbedding
     d_model: !ref <transformer_d_model>
     vocab: !ref <phonemes_count>

encoder_emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <graphemes_count>
    embedding_dim: !ref <embedding_dim>

emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>
    embedding_dim: !ref <embedding_dim>

word_emb_enc: !new:speechbrain.lobes.models.g2p.model.WordEmbeddingEncoder
    word_emb_dim: !ref <word_emb_dim>
    word_emb_enc_dim: !ref <word_emb_enc_dim>
    norm_type: !ref <word_emb_norm_type>

word_emb: !apply:speechbrain.lobes.models.g2p.attnrnn.lazy_init
    init: !name:speechbrain.wordemb.transformer.TransformerWordEmbeddings
        model: !ref <word_emb_model>

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

modules:
    model: !ref <model>
    ctc_lin: !ref <ctc_lin>
    word_emb_enc: !ref <word_emb_enc>

model: !new:speechbrain.lobes.models.g2p.model.TransformerG2P
    encoder_emb: !apply:speechbrain.utils.hparams.choice
        value: !ref <embedding_type>
        choices:
            regular: !ref <encoder_emb>
            normalized: !ref <encoder_emb_norm>
    char_lin: !ref <char_lin>
    phn_lin: !ref <char_lin>
    lin: !ref <lin>
    out: !ref <log_softmax>
    emb: !apply:speechbrain.utils.hparams.choice
        value: !ref <embedding_type>
        choices:
            regular: !ref <emb>
            normalized: !ref <emb_norm>
    d_model: !ref <transformer_d_model>
    nhead: !ref <transformer_num_heads>
    num_encoder_layers: !ref <enc_num_layers>
    num_decoder_layers: !ref <dec_num_layers>
    d_ffn: !ref <transformer_d_ffn>
    dropout: !ref <transformer_dropout>
    max_length: !ref <max_length>
    encoder_kdim: !ref <enc_kdim>
    encoder_vdim: !ref <enc_vdim>
    decoder_kdim: !ref <dec_kdim>
    decoder_vdim: !ref <dec_vdim>
    activation: !name:torch.nn.GELU
    normalize_before: !ref <transformer_normalize_before>
    encoder_module: !ref <transformer_encoder_module>
    kernel_size: !ref <transformer_kernel_size>
    causal: !ref <transformer_causal>


lm_model: !new:speechbrain.lobes.models.transformer.TransformerLM.TransformerLM
    vocab: !ref <phonemes_count>
    d_model: !ref <lm_d_model>
    num_encoder_layers: !ref <lm_enc_num_layers>
    num_decoder_layers: !ref <lm_dec_num_layers>
    d_ffn: !ref <lm_d_ffn>
    dropout: !ref <lm_dropout>

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    betas: !ref (<adam_beta1>, <adam_beta2>)

beam_searcher: !new:speechbrain.decoders.S2STransformerBeamSearch
    modules:
    - !ref <model>
    - !ref <lin>
    - !ref <ctc_lin>
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    blank_index: !ref <blank_index>
    min_decode_ratio: !ref <beam_search_min_decode_ratio>
    max_decode_ratio: !ref <beam_search_max_decode_ratio>
    beam_size: !ref <beam_search_beam_size>
    eos_threshold: !ref <beam_search_eos_threshold>
    using_max_attn_shift: !ref <beam_search_using_max_attn_shift>
    max_attn_shift: !ref <beam_search_max_attn_shift>
    coverage_penalty: !ref <beam_search_coverage_penalty>
    ctc_weight: !ref <beam_search_ctc_weight_decode>
    using_eos_threshold: False
    length_normalization: False


beam_searcher_lm: !new:speechbrain.decoders.seq2seq.S2STransformerBeamSearch
    modules:
    - !ref <model>
    - !ref <lin>
    - !ref <ctc_lin>
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    blank_index: !ref <blank_index>
    min_decode_ratio: !ref <beam_search_min_decode_ratio>
    max_decode_ratio: !ref <beam_search_max_decode_ratio>
    beam_size: !ref <beam_search_beam_size>
    eos_threshold: !ref <beam_search_eos_threshold>
    using_max_attn_shift: !ref <beam_search_using_max_attn_shift>
    max_attn_shift: !ref <beam_search_max_attn_shift>
    coverage_penalty: !ref <beam_search_coverage_penalty>
    ctc_weight: !ref <beam_search_ctc_weight_decode>
    lm_weight: !ref <beam_search_lm_weight>
    temperature: !ref <beam_search_temperature>
    temperature_lm: !ref <beam_search_temperature_lm>
    using_eos_threshold: False
    length_normalization: False


beam_searcher_valid: !new:speechbrain.decoders.S2STransformerBeamSearch
    modules:
    - !ref <model>
    - !ref <lin>
    - !ref <ctc_lin>
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    blank_index: !ref <blank_index>
    min_decode_ratio: !ref <beam_search_min_decode_ratio>
    max_decode_ratio: !ref <beam_search_max_decode_ratio>
    beam_size: !ref <beam_search_beam_size_valid>
    eos_threshold: !ref <beam_search_eos_threshold>
    using_max_attn_shift: !ref <beam_search_using_max_attn_shift>
    max_attn_shift: !ref <beam_search_max_attn_shift>
    coverage_penalty: !ref <beam_search_coverage_penalty>
    ctc_weight: !ref <beam_search_ctc_weight_decode>
    using_eos_threshold: False
    length_normalization: False


lr_annealing: !new:speechbrain.nnet.schedulers.ReduceLROnPlateau
    lr_min: !ref <lr_min>
    dont_halve_until_epoch: !ref <lr_dont_halve_until_epoch>
    patience: !ref <lr_patience>

homograph_extractor: !new:speechbrain.lobes.models.g2p.homograph.SubsequenceExtractor

seq_cost: !name:speechbrain.nnet.losses.nll_loss

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

seq_cost_metric: !name:speechbrain.nnet.losses.nll_loss
    reduction: batch

homograph_cost: !new:speechbrain.lobes.models.g2p.homograph.SubsequenceLoss
    seq_cost: !ref <seq_cost>

seq_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !ref <seq_cost_metric>

seq_stats_homograph: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !ref <seq_cost_metric>

classification_stats_homograph: !name:speechbrain.utils.metric_stats.ClassificationStats

per_stats: !name:speechbrain.utils.metric_stats.ErrorRateStats
per_stats_homograph: !name:speechbrain.utils.metric_stats.ErrorRateStats


lexicon_epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <lexicon_epochs>

sentence_epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <sentence_epochs>

homograph_epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <homograph_epochs>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        ctc_lin: !ref <ctc_lin>
        lexicon_counter: !ref <lexicon_epoch_counter>
        sentence_counter: !ref <sentence_epoch_counter>
        homograph_counter: !ref <homograph_epoch_counter>

model_output_keys:
    - p_seq
    - char_lens
    - encoder_out

grapheme_encoder: !new:speechbrain.dataio.encoder.TextEncoder
phoneme_encoder: !new:speechbrain.dataio.encoder.TextEncoder

out_phoneme_decoder: !name:speechbrain.lobes.models.g2p.attnrnn.text_decode
    encoder: !ref <phoneme_encoder>


encode_pipeline:
    batch: True
    use_padded_data: True
    output_keys:
        - grapheme_list
        - grapheme_encoded_list
        - grapheme_encoded
    steps:
        - !apply:speechbrain.lobes.models.g2p.attnrnn.clean_pipeline
          graphemes: !ref <graphemes>
        - !apply:speechbrain.lobes.models.g2p.attnrnn.grapheme_pipeline
          takes: txt_cleaned
          graphemes: !ref <graphemes>
          grapheme_encoder: !ref <grapheme_encoder>

decode_pipeline:
    batch: True
    output_keys:
        - phonemes
    steps:
        - !apply:speechbrain.lobes.models.g2p.attnrnn.beam_search_pipeline
          beam_searcher: !ref <beam_searcher>
        - !apply:speechbrain.lobes.models.g2p.attnrnn.phoneme_decoder_pipeline
          phoneme_encoder: !ref <phoneme_encoder>
          phonemes: !ref <phonemes>
          bos_index: !ref <bos_index>
          eos_index: !ref <eos_index>

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
    loadables:
        model: !ref <model>
        ctc_lin: !ref <ctc_lin>
    paths:
        model: !ref <pretrained_path>/model.ckpt
        ctc_lin: !ref <pretrained_path>/ctc_lin.ckpt

train_steps:
    - name: lexicon
      train_data: !ref <lexicon_train_data>
      valid_data: !ref <lexicon_valid_data>
      test_data: !ref <lexicon_test_data>
      epoch_counter: !ref <lexicon_epoch_counter>
      ctc_epochs: !ref <lexicon_ctc_epochs>
      wer_file: !ref <save_folder>/wer_lexicon.txt
      sample: !ref <lexicon_sample>
      sample_random: !ref <lexicon_sample_random>
      dataloader_opts:
          batch_size: !ref <lexicon_batch_size>

    - name: sentence
      train_data: !ref <sentence_train_data>
      valid_data: !ref <sentence_valid_data>
      test_data: !ref <sentence_test_data>
      epoch_counter: !ref <sentence_epoch_counter>
      ctc_epochs: !ref <sentence_ctc_epochs>
      wer_file: !ref <save_folder>/wer_sentence.txt
      sample: !ref <sentence_sample>
      sample_random: !ref <sentence_sample_random>
      dataloader_opts:
          batch_size: !ref <sentence_batch_size>

    - name: homograph
      train_data: !ref <homograph_train_data>
      valid_data: !ref <homograph_valid_data>
      test_data: !ref <homograph_test_data>
      epoch_counter: !ref <homograph_epoch_counter>
      ctc_epochs: !ref <homograph_ctc_epochs>
      mode: homograph
      balance: !ref <homograph_balance>
      balance_on: homograph_wordid
      sample: !ref <homograph_sample>
      sample_random: !ref <homograph_sample_random>
      wer_file: !ref <save_folder>/wer_homograph.txt
      homograph_stats_file: !ref <save_folder>/homograph_stats.txt
      dataloader_opts:
          batch_size: !ref <homograph_batch_size>


deps_pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
    collect_in: !ref <save_folder>
    loadables:
        lm: !ref <lm_model>
    paths:
        lm: !ref <pretrained_path>/lm.ckpt
