# Model: wav2vec2 + DNN + CTC
# Augmentation: SpecAugment
# Authors: Sangeet Sagar 2023
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 4200
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/robust_asr/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Path to pre-trained tokenizer, and wav2model
# We use the tokenizer trained on CommonVoice dataset
tokenizer_path: /netscratch/sagar/thesis/speechbrain/recipes/RescueSpeech/pre-trained/wavlm_commonvoice # !PLACEHOLDER
wav2vec2_hub: /netscratch/sagar/thesis/speechbrain/recipes/RescueSpeech/pre-trained/wavlm-large # !PLACEHOLDER
pretrained_wav2vec2_path: /netscratch/sagar/thesis/speechbrain/recipes/RescueSpeech/pre-trained/wavlm_rescuspeech # !PLACEHOLDER

# Path to pre-trained enhancement model
pretrained_enhance_path: /netscratch/sagar/thesis/speechbrain/recipes/RescueSpeech/pre-trained/sepformer_rescuespeech_16k # !PLACEHOLDER

epochs_before_lr_drop: 3
unfreeze_epoch: !ref <epochs_before_lr_drop> + 1
frozen_models: [masknet, wav2vec2]
unfrozen_models: [masknet, wav2vec2]

# Dataset prep parameters
data_folder: !ref ../../../dataset/Task_ASR # !PLACEHOLDER
csv_dir: !ref csv_files
train_tsv_file: !ref <data_folder>/train.tsv
dev_tsv_file: !ref <data_folder>/dev.tsv
test_tsv_file: !ref <data_folder>/test.tsv
accented_letters: True
train_csv: !ref <csv_dir>/train.csv
valid_csv: !ref <csv_dir>/dev.csv
test_csv: !ref <csv_dir>/test.csv
skip_prep: False

# We remove utterance slonger than 10s in the train/dev/test sets as
# longer sentences certainly correspond to "open microphones".
avoid_if_longer_than: 10.0

## Model parameters- Enhance model
dereverberate: False
save_audio: True
resample: False
enhance_sample_rate: 16000
limit_training_signal_len: False
training_signal_len: 64000
use_wavedrop: False
use_speedperturb: True
use_freq_domain: False
use_rand_shift: False
min_shift: -8000
max_shift: 8000

## Training parameters- ASR
number_of_epochs: 15
lr_asr: 1
lr_wav2vec: 0.0001
sorting: ascending
auto_mix_prec: False
asr_sample_rate: 16000
ckpt_interval_minutes: 30 # save checkpoint every N min
checkpoint_avg: 5

# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 6 per GPU to fit 16GB of VRAM
batch_size: 2
test_batch_size: 1
dataloader_num_workers: 8
test_num_workers: 8

dataloader_options:
    batch_size: !ref <batch_size>
    num_workers: !ref <dataloader_num_workers>
test_dataloader_options:
    batch_size: !ref <test_batch_size>
    num_workers: !ref <test_num_workers>

# BPE parameters
token_type: char  # ["unigram", "bpe", "char"]
character_coverage: 1.0

# ASR Model parameters
# activation: !name:torch.nn.LeakyReLU
dnn_neurons: 1024
wav2vec_output_dim: !ref <dnn_neurons>
freeze_wav2vec: False
dropout: 0.15

# Outputs
output_neurons: 32  # BPE size, index(blank/eos/bos) = 0

# Be sure that the bos and eos index match with the BPEs ones
blank_index: 0
bos_index: 1
eos_index: 2

# Loss weights
sepformer_weight: 1

# loss thresholding -- this thresholds the training loss
threshold_byloss: True
threshold: -30
clip_grad_norm: 5
loss_upper_lim: 999999  # this is the upper limit for an acceptable loss
lr_enhance: 0.00015
optimizer: !name:torch.optim.Adam
    lr: !ref <lr_enhance>
    weight_decay: 0

# Functions and classes
speedperturb: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    perturb_prob: 1.0
    drop_freq_prob: 0.0
    drop_chunk_prob: 0.0
    sample_rate: !ref <enhance_sample_rate>
    speeds: [95, 100, 105]

enhance_model: !include:../models/sepformer.yaml

asr_model: !include:../models/asr_model.yaml
    output_neurons: !ref <output_neurons>

wav2vec2: !new:speechbrain.lobes.models.huggingface_wav2vec.HuggingFaceWav2Vec2
    source: !ref <wav2vec2_hub>
    output_norm: True
    freeze: !ref <freeze_wav2vec>
    save_path: !ref <save_folder>/wav2vec2_checkpoint

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <asr_sample_rate>
    speeds: [95, 100, 105]

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

# Enhanc loss
enhance_loss: !name:speechbrain.nnet.losses.get_si_snr_with_pitwrapper

# CTC loss
ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

asr_enc: !ref <asr_model[enc]>
ctc_lin: !ref <asr_model[ctc_lin]>
model: !new:torch.nn.ModuleList
    - [!ref <asr_enc>, !ref <ctc_lin>]

model_opt_class: !name:torch.optim.Adadelta
    lr: !ref <lr_asr>
    rho: 0.95
    eps: 1.e-8

wav2vec_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_wav2vec>

lr_annealing_model: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_asr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

lr_annealing_wav2vec: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_wav2vec>
    improvement_threshold: 0.0025
    annealing_factor: 0.9
    patient: 0

# Change the path to use a local model instead of the remote one
asr_pretrained: !new:speechbrain.utils.parameter_transfer.Pretrainer
    collect_in: !ref <save_folder>
    loadables:
        encoder: !ref <enhance_model[Encoder]>
        masknet: !ref <enhance_model[MaskNet]>
        decoder: !ref <enhance_model[Decoder]>
        wav2vec2: !ref <wav2vec2>
        # asr_model: !ref <model>
    paths:
        encoder: !ref <pretrained_enhance_path>/encoder.ckpt
        decoder: !ref <pretrained_enhance_path>/decoder.ckpt
        masknet: !ref <pretrained_enhance_path>/masknet.ckpt
        wav2vec2: !ref <pretrained_wav2vec2_path>/wav2vec2.ckpt
        # asr_model: !ref <pretrained_wav2vec2_path>/model.ckpt

modules:
    encoder: !ref <enhance_model[Encoder]>
    masknet: !ref <enhance_model[MaskNet]>
    decoder: !ref <enhance_model[Decoder]>
    wav2vec2: !ref <wav2vec2>
    enc: !ref <asr_model[enc]>
    ctc_lin: !ref <asr_model[ctc_lin]>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        encoder: !ref <enhance_model[Encoder]>
        decoder: !ref <enhance_model[Decoder]>
        masknet: !ref <enhance_model[MaskNet]>
        wav2vec2: !ref <wav2vec2>
        model: !ref <model>
        enc: !ref <asr_model[enc]>
        ctc_lin: !ref <asr_model[ctc_lin]>
        scheduler_model: !ref <lr_annealing_model>
        scheduler_wav2vec: !ref <lr_annealing_wav2vec>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
    split_tokens: True
