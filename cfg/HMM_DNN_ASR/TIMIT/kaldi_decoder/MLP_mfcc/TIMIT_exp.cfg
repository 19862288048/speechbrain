[global]

    # Basic Parameters
    verbosity=2
    output_folder=/localscratch/exp/HMM_DNN_ASR/TIMIT/TIMIT_MLP2
    device=cuda
    
    # Data Parameters
    data_file=/network/tmp1/ravanelm/datasets/TIMIT.tar.gz
    local_data_folder=/localscratch/TIMIT
    csv_train=$local_data_folder/train.csv
    csv_valid=$local_data_folder/dev.csv
    csv_test=$local_data_folder/test.csv

    # Kaldi labels
    kaldi_folder=/network/tmp1/ravanelm/quick_test
    kaldi_ali_tr=$kaldi_folder/dnn4_pretrain-dbn_dnn_ali 
    kaldi_ali_dev=$kaldi_folder/dnn4_pretrain-dbn_dnn_ali_dev  
    kaldi_ali_test=$kaldi_folder/dnn4_pretrain-dbn_dnn_ali_test 
    kaldi_lab_opts=ali-to-pdf
    
    # Neural Parameters    
    N_epochs=33
    N_batch_tr=4
    N_batch_valid=4
    lr=0.0004

    # Other Parameters
    sample_rate=16000
    seed=456

    # Computations
    cfg_folder=cfg/HMM_DNN_ASR/TIMIT/kaldi_decoder/MLP_mfcc/
    training_computations=$cfg_folder/training_loop.cfg
    feature_computations=cfg/features/mfcc_features.cfg
    neural_computations=$cfg_folder/MLP.cfg
    neural_block_computations=$cfg_folder/MLP_block.cfg
    lab_counts_computations=$cfg_folder/lab_counts.cfg
    
    count_save_folder=$output_folder/label_counts/
    posterior_save_folder = $output_folder/posteriors/

[/global]

[functions]

    	[copy_locally]
    		class_name=speechbrain.data_io.data_preparation.copy_data_locally
            	data_file=$data_file
    		local_folder=$local_data_folder
    	[/copy_locally]

    	[prepare_timit]
    		class_name=speechbrain.data_io.data_preparation.timit_prepare
    		data_folder=$local_data_folder
    		splits=train,dev,test
    		kaldi_ali_tr=$kaldi_ali_tr
    		kaldi_ali_dev=$kaldi_ali_dev
    		kaldi_ali_test=$kaldi_ali_test
    		kaldi_lab_opts=$kaldi_lab_opts
    		save_folder=$local_data_folder
    	[/prepare_timit]    
	    
    	[training_nn]
    	    class_name=speechbrain.core.execute_computations
    	    cfg_file=$training_computations
            device=$device
            n_loops=$N_epochs
    	    recovery=True
    	[/training_nn]

    	[label_counts]
    	    class_name=speechbrain.core.execute_computations
            cfg_file=$lab_counts_computations
    	    csv_file=$csv_train
            csv_read=kaldi_lab
    	    batch_size=$N_batch_tr
    	    sentence_sorting=ascending
    	    out_var=lab_counts
            save_folder=$count_save_folder
    	    accum_type=last
    	[/label_counts]

    	[save_test_posteriors]
    	    class_name=speechbrain.core.execute_computations
            cfg_file=$neural_computations
            device=$device
            eval_mode=True
    	    csv_file=$csv_test
            csv_read=wav,kaldi_lab,spk_id
    	    batch_size=$N_batch_valid
    	    sentence_sorting=ascending
    	    stop_at=save_posteriors
    	    torch_no_grad=True
    	[/save_test_posteriors]

    	[kaldi_decoder]
	    class_name=speechbrain.decoders.decoders.kaldi_decoder
            posterior_folder=$posterior_save_folder
    	    decoding_script_folder=tools/kaldi_decoder
    	    decoding_script=tools/kaldi_decoder/decode_dnn.sh
            scoring=True
            scoring_script=tools/kaldi_decoder/local/score.sh
            scoring_opts=--min_lmwt 1 --max_lmwt 10
            alidir=$kaldi_folder/dnn4_pretrain-dbn_dnn_ali_test
    	    datadir=$kaldi_folder/data/test
    	    graphdir=$kaldi_folder/graph
    	[/kaldi_decoder]

[/functions]

[computations]
    
    # Copy dataset locally
    copy_locally()

    # TIMIT preparation
    prepare_timit()
      
    # process the specified dataset
    training_nn()

    # save test posteriors
    mode='test'
    save_test_posteriors(mode)
    save_test_posteriors(mode)

    # perform decoding with kaldi   
    kaldi_decoder()

[/computations]
