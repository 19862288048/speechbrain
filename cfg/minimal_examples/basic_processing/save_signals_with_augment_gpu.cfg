# SpeechBrain
# Description: This configuration first puts waveform on the GPU, then augments it.
#           This configuration file can be called by the loop function and processes batches on signals.


[global]
sample_rate=16000
[/global]

[functions]
    [add_babble]
        class_name=data_augmentation.add_babble
    [/add_babble]
    [add_reverb]
        class_name=data_augmentation.add_reverb
        scp_file=samples/rir_samples/rirs.scp
    [/add_reverb]
    [add_noise]
        class_name=data_augmentation.add_noise
    [/add_noise]
    [add_noise_scp]
        class_name=data_augmentation.add_noise
        scp_file=samples/noise_samples/noise.scp
    [/add_noise_scp]
    [drop_freq]
        class_name=data_augmentation.drop_freq
    [/drop_freq]
    [drop_chunk]
        class_name=data_augmentation.drop_chunk
    [/drop_chunk]
    [do_clip]
        class_name=data_augmentation.do_clip
    [/do_clip]
    [speed_perturb]
        class_name=data_augmentation.speed_perturb
        orig_freq=$sample_rate
    [/speed_perturb]
    [save]
        class_name=data_processing.save
        sample_rate=$sample_rate
        save_format=flac
        parallel_write=True    
    [/save]
[/functions]


[computations]
    id,wav,wav_len=get_input_var()
    pycmd(wav=wav.cuda();wav_len=wav_len.cuda())
    wav_babble=add_babble(wav,wav_len)
    wav_reverb=add_reverb(wav_babble,wav_len)
    wav_noise=add_noise(wav_reverb,wav_len)
    wav_noise_scp=add_noise_scp(wav_noise,wav_len)
    wav_drop_freq=drop_freq(wav_noise_scp)
    wav_drop_chunk=drop_chunk(wav_drop_freq)
    wav_clip=do_clip(wav_drop_chunk)
    wav_perturb=speed_perturb(wav_clip)
    save(wav_perturb,id,wav_len)
[/computations]



